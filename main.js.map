{"version":3,"sources":["./src/app/viewer/viewer.component.html","./src/app/viewer/viewer.component.ts","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/safe.pipe.ts","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["<p-card *ngIf=\"!hideUpload\">\n  <ngx-file-drop dropZoneLabel=\"Drop e-CoC .json here\" (onFileDrop)=\"dropped($event)\" (onFileOver)=\"fileOver($event)\"\n    (onFileLeave)=\"fileLeave($event)\">\n    <ng-template let-openFileSelector=\"openFileSelector\">\n      Drag n' drop or\n      <button type=\"button\" (click)=\"openFileSelector()\">Browse Files</button>\n    </ng-template>\n  </ngx-file-drop>\n</p-card>\n<br *ngIf=\"!hideUpload\" />\n<p-tabView *ngIf=\"json != null\">\n  <p-tabPanel header=\"e-CoC\">\n    <div class=\"p-grid\">\n      <div class=\"p-col-2\">Id</div>\n      <div class=\"p-col-10\">{{json.Id ? json.Id : ''}}</div>\n      <div class=\"p-col-2\">Uuid</div>\n      <div class=\"p-col-10\">{{json.Uuid ? json.Uuid : ''}}</div>\n      <div class=\"p-col-2\">URL</div>\n      <div class=\"p-col-10\">{{json.URL ? json.URL : ''}}</div>\n      <div class=\"p-col-2\">RefSchemaUrl</div>\n      <div class=\"p-col-10\">{{json.RefSchemaUrl ? json.RefSchemaUrl : ''}}</div>\n      <div class=\"p-col-2\">DataLevel</div>\n      <div class=\"p-col-10\">{{json.EcocData.DataLevel ? json.EcocData.DataLevel : ''}}</div>\n    </div>\n    <p-divider></p-divider>\n    <p-tabView *ngIf=\"json.EcocData.DataLevel != 'A'\">\n      <p-tabPanel header=\"e-CoC\">\n        <div class=\"p-grid\">\n          <div class=\"p-col-2\">EcocType</div>\n          <div class=\"p-col-10\">{{json.EcocData.Data.EcocType ? json.EcocData.Data.EcocType : ''}}</div>\n\n          <div class=\"p-col-12\">\n            <p-fieldset legend=\"Parties\">\n              <p-accordion *ngFor=\"let party of json.EcocData.Data.Parties\">\n                <p-accordionTab [header]=\"party.PartyName\">\n                  <div class=\"p-grid\">\n                    <div class=\"p-col-2\">PartyName</div>\n                    <div class=\"p-col-10\">{{party.PartyName ? party.PartyName : ''}}</div>\n\n                    <div class=\"p-col-2\">Adress</div>\n                    <div class=\"p-col-10\"></div>\n                    <div class=\"p-col-1\"></div>\n                    <div class=\"p-col-2\">StreetAddress</div>\n                    <div class=\"p-col-9\">{{party.PartyAddress.StreetAddress ? party.PartyAddress.StreetAddress : ''}}\n                    </div>\n\n                    <div class=\"p-col-1\"></div>\n                    <div class=\"p-col-2\">City</div>\n                    <div class=\"p-col-9\">{{party.PartyAddress.City ? party.PartyAddress.City : ''}}</div>\n\n                    <div class=\"p-col-1\"></div>\n                    <div class=\"p-col-2\">PostalCode</div>\n                    <div class=\"p-col-9\">{{party.PartyAddress.PostalCode ? party.PartyAddress.PostalCode : ''}}</div>\n\n                    <div class=\"p-col-1\"></div>\n                    <div class=\"p-col-2\">CountryCode</div>\n                    <div class=\"p-col-9\">{{party.PartyAddress.CountryCode ? party.PartyAddress.CountryCode : ''}}</div>\n\n                    <div class=\"p-col-1\"></div>\n                    <div class=\"p-col-2\">State</div>\n                    <div class=\"p-col-9\">{{party.PartyAddress.State ? party.PartyAddress.State : ''}}</div>\n\n                    <div class=\"p-col-1\" *ngIf=\"party.PartyAddress.AddAddressLine\"></div>\n                    <div class=\"p-col-2\" *ngIf=\"party.PartyAddress.AddAddressLine\">AddAddressLine</div>\n                    <div class=\"p-col-9\" *ngIf=\"party.PartyAddress.AddAddressLine\">\n                      {{party.PartyAddress.AddAddressLine ? party.PartyAddress.AddAddressLine : ''}}</div>\n\n                    <div class=\"p-col-2\">PartyRole</div>\n                    <div class=\"p-col-10\">{{party.PartyRole ? party.PartyRole : ''}}</div>\n                  </div>\n                </p-accordionTab>\n              </p-accordion>\n            </p-fieldset>\n          </div>\n\n          <div class=\"p-col-12\">\n            <p-fieldset legend=\"NormativeRef\">\n              <p-table [value]=\"json.EcocData.Data.NormativeRef\">\n                <ng-template pTemplate=\"body\" let-reference>\n                  <tr>\n                    <td>{{reference}}</td>\n                  </tr>\n                </ng-template>\n              </p-table>\n            </p-fieldset>\n          </div>\n\n          <div class=\"p-col-12\">\n            <p-fieldset legend=\"BusinessRef\">\n              <p-tabView>\n                <p-tabPanel header=\"StandardReferences\">\n                  <p-table [value]=\"json.EcocData.Data.BusinessRef.StandardReferences\">\n                    <ng-template pTemplate=\"body\" let-reference>\n                      <tr>\n                        <td>{{reference.Name}}</td>\n                        <td>{{reference.Value}}</td>\n                      </tr>\n                    </ng-template>\n                  </p-table>\n                </p-tabPanel>\n\n                <p-tabPanel header=\"AdditionalReferences\">\n                  <p-table [value]=\"json.EcocData.Data.BusinessRef.AdditionalReferences\">\n                    <ng-template pTemplate=\"body\" let-reference>\n                      <tr>\n                        <td>{{reference.Name}}</td>\n                        <td *ngFor=\"let val of reference.Value\">{{val}}</td>\n                      </tr>\n                    </ng-template>\n                  </p-table>\n                </p-tabPanel>\n              </p-tabView>\n            </p-fieldset>\n          </div>\n\n          <div class=\"p-col-12\">\n            <p-fieldset legend=\"ObjectOfDeclaration\">\n              <p-accordion *ngFor=\"let obj of json.EcocData.Data.ObjectOfDeclaration\">\n                <p-accordionTab [header]=\"obj.ObjectId\">\n                  <div class=\"p-grid\">\n                    <div class=\"p-col-2\">ObjectId</div>\n                    <div class=\"p-col-10\">{{obj.ObjectId ? obj.ObjectId : ''}}</div>\n                    <div class=\"p-col-2\">ObjectName</div>\n                    <div class=\"p-col-10\">{{obj.ObjectName ? obj.ObjectName : ''}}</div>\n                    <div class=\"p-col-2\">ObjectType</div>\n                    <div class=\"p-col-10\">{{obj.ObjectType ? obj.ObjectType : ''}}</div>\n                  </div>\n\n                  <p-table [value]=\"obj.Quantities\">\n                    <ng-template pTemplate=\"caption\">\n                      <div class=\"p-d-flex p-ai-center p-jc-between\">Quantities</div>\n                    </ng-template>\n                    <ng-template pTemplate=\"body\" let-quantity>\n                      <tr>\n                        <td>{{quantity.Amount}} {{quantity.Unit}}</td>\n                      </tr>\n                    </ng-template>\n                  </p-table>\n\n                  <p-table [value]=\"obj.Dimensions\">\n                    <ng-template pTemplate=\"caption\">\n                      <div class=\"p-d-flex p-ai-center p-jc-between\">Dimensions</div>\n                    </ng-template>\n                    <ng-template pTemplate=\"body\" let-dimension>\n                      <tr>\n                        <td>{{dimension.Direction}}</td>\n                        <td>{{dimension.DimValue}} {{dimension.DimUnit}}</td>\n                      </tr>\n                    </ng-template>\n                  </p-table>\n\n                  <p-table [value]=\"obj.ObjectProperties\">\n                    <ng-template pTemplate=\"caption\">\n                      <div class=\"p-d-flex p-ai-center p-jc-between\">ObjectProperties</div>\n                    </ng-template>\n                    <ng-template pTemplate=\"body\" let-property>\n                      <tr>\n                        <td>{{property.Name}}</td>\n                        <td *ngFor=\"let val of property.Value\">{{val}}</td>\n                      </tr>\n                    </ng-template>\n                  </p-table>\n                </p-accordionTab>\n              </p-accordion>\n            </p-fieldset>\n          </div>\n        </div>\n      </p-tabPanel>\n      <p-tabPanel header=\"Results\" *ngIf=\"json.EcocData.DataLevel == 'C'\">\n        <ngx-json-viewer [json]=\"json.EcocData.Results\" [depth]=\"2\"></ngx-json-viewer>\n      </p-tabPanel>\n    </p-tabView>\n  </p-tabPanel>\n  <p-tabPanel header=\"Declaration\" *ngIf=\"json.EcocData.DataLevel != 'A'\">\n    <div class=\"p-grid\">\n      <div class=\"p-col-2\">Date of Issue</div>\n      <div class=\"p-col-10\">{{json.Declaration.DateOfIssue ? json.Declaration.DateOfIssue : ''}}</div>\n\n      <div class=\"p-col-2\">Concessions</div>\n      <div class=\"p-col-10\">\n        <p *ngFor=\"let Concession of json.Declaration.Concessions\">{{Concession}}</p>\n      </div>\n\n      <div class=\"p-col-2\">Remarks</div>\n      <div class=\"p-col-10\">\n        <p *ngFor=\"let remark of json.Declaration.remarks\">{{remark}}</p>\n      </div>\n\n      <div class=\"p-col-2\">ConformityStatus</div>\n      <div class=\"p-col-10\">{{json.Declaration.ConformityStatus ? json.Declaration.ConformityStatus : ''}}</div>\n\n      <div class=\"p-col-2\">Signature</div>\n      <div class=\"p-col-10\"></div>\n      <div class=\"p-col-1\"></div>\n      <div class=\"p-col-2\">SignerName</div>\n      <div class=\"p-col-9\">{{json.Declaration.Signature.SignerName ? json.Declaration.Signature.SignerName : ''}}</div>\n      <div class=\"p-col-1\"></div>\n      <div class=\"p-col-2\">SignerPosition</div>\n      <div class=\"p-col-9\">\n        {{json.Declaration.Signature.SignerPosition ? json.Declaration.Signature.SignerPosition : ''}}</div>\n      <div class=\"p-col-1\"></div>\n      <div class=\"p-col-2\">SignatureStamp</div>\n      <div class=\"p-col-9\">\n        {{json.Declaration.Signature.SignatureStamp ? json.Declaration.Signature.SignatureStamp : ''}}</div>\n      <div class=\"p-col-1\"></div>\n      <div class=\"p-col-2\">SignatureDate</div>\n      <div class=\"p-col-9\">{{json.Declaration.Signature.SignatureDate ? json.Declaration.Signature.SignatureDate : ''}}\n      </div>\n\n      <div class=\"p-col-2\">CocConfirmationText</div>\n      <div class=\"p-col-10\">\n        <p *ngFor=\"let CocConfirmationText of json.Declaration.CocConfirmationText\">{{CocConfirmationText}}</p>\n      </div>\n    </div>\n  </p-tabPanel>\n  <p-tabPanel header=\"Attachment\">\n    <iframe [src]=\"pdf | safe: 'resourceUrl'\" width=\"100%\" height=\"900px\"></iframe>\n  </p-tabPanel>\n  <p-tabPanel header=\"JSON\">\n    <ngx-json-viewer [json]=\"json\" [expanded]=\"false\"></ngx-json-viewer>\n  </p-tabPanel>\n</p-tabView>\n\n<p-toast position=\"top-right\"></p-toast>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { NgxFileDropEntry, FileSystemFileEntry, FileSystemDirectoryEntry } from 'ngx-file-drop';\nimport { MessageService } from 'primeng/api';\n\n\n@Component({\n    selector: 'app-viewer',\n    templateUrl: './viewer.component.html',\n    styleUrls: ['./viewer.component.css']\n})\nexport class ViewerComponent implements OnInit {\n    public files: NgxFileDropEntry[] = [];\n    json: any = null;\n    pdf = '';\n    hideUpload = false;\n    jsonFail = false;\n\n    constructor(\n        private route: ActivatedRoute,\n        private http: HttpClient,\n        private messageService: MessageService\n    ) { }\n\n    ngOnInit(): void {\n        this.route.queryParams.subscribe(params => {\n            if (params.path) {\n                this.http.get(params.path).subscribe(data => {\n                    this.hideUpload = true;\n                    this.json = data;\n                });\n            }\n        })\n    }\n\n    public dropped(files: NgxFileDropEntry[]) {\n        this.files = files;\n        for (const droppedFile of files) {\n\n            // Is it a file?\n            if (droppedFile.fileEntry.isFile) {\n                const fileEntry = droppedFile.fileEntry as FileSystemFileEntry;\n                fileEntry.file((file: File) => {\n\n                    // Here you can access the real file\n                    console.log(droppedFile.relativePath, file);\n\n                    const reader = new FileReader();\n                    reader.onload = this._handleReaderLoaded.bind(this);\n                    reader.readAsDataURL(file);\n                });\n            } else {\n                // It was a directory (empty directories are added, otherwise only files)\n                const fileEntry = droppedFile.fileEntry as FileSystemDirectoryEntry;\n                console.log(droppedFile.relativePath, fileEntry);\n            }\n        }\n    }\n\n    private _handleReaderLoaded(e: any) {\n        const reader = e.target;\n        console.log(reader.result);\n        console.log()\n        try {\n            this.json = JSON.parse(atob(reader.result.split(',')[1]));\n            console.log(this.json);\n        } catch {\n            try {\n                this.json = JSON.parse(atob(reader.result.split(',')[1].split('/')[1]));\n                console.log(this.json);\n            } catch {\n                this.messageService.add({ severity: 'error', summary: 'Fehler', detail: 'Bei der Verabeitung des JSON ist ein Fehler aufgetreten.' });\n            }\n        }\n\n        if (this.json && this.json.Attachment) {\n            this.pdf = 'data:' + this.json.Attachment.FileType + ';' + this.json.Attachment.Encoding + ',' + this.json.Attachment.Data;\n            console.log(this.pdf);\n        }\n    }\n\n    public fileOver(event: any) {\n        console.log(event);\n    }\n\n    public fileLeave(event: any) {\n        console.log(event);\n    }\n\n    // getArrayFromObject(obj) {\n    //     var arr = [];\n    //     for(const [key, value] of Object.entries(obj)) {\n    //         arr.push({key, value});\n    //     }\n    //     return arr;\n    // }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'eCoC-Viewer';\n}\n","<router-outlet></router-outlet>","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeStyle, SafeScript, SafeUrl, SafeResourceUrl } from '@angular/platform-browser';\n\n@Pipe({\n  name: 'safe'\n})\nexport class SafePipe implements PipeTransform {\n\n  constructor(protected sanitizer: DomSanitizer) { }\n\n  public transform(value: any, type: string): SafeHtml | SafeStyle | SafeScript | SafeUrl | SafeResourceUrl {\n    switch (type) {\n      case 'html': return this.sanitizer.bypassSecurityTrustHtml(value);\n      case 'style': return this.sanitizer.bypassSecurityTrustStyle(value);\n      case 'script': return this.sanitizer.bypassSecurityTrustScript(value);\n      case 'url': return this.sanitizer.bypassSecurityTrustUrl(value);\n      case 'resourceUrl': return this.sanitizer.bypassSecurityTrustResourceUrl(value);\n      default: throw new Error(`Invalid safe type specified: ${type}`);\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule } from '@angular/common/http'\n\nimport { NgxJsonViewerModule } from 'ngx-json-viewer';\nimport { NgxFileDropModule } from 'ngx-file-drop';\n\nimport { CardModule } from 'primeng/card';\nimport { TabViewModule } from 'primeng/tabview';\nimport { AccordionModule } from 'primeng/accordion';\nimport { DividerModule } from 'primeng/divider';\nimport { TableModule } from 'primeng/table';\nimport { FieldsetModule } from 'primeng/fieldset';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { MessagesModule } from 'primeng/messages';\nimport { MessageModule } from 'primeng/message';\nimport { ToastModule } from 'primeng/toast';\n\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ViewerComponent } from './viewer/viewer.component';\nimport { SafePipe } from './safe.pipe';\nimport { from } from 'rxjs';\nimport { MessageService } from 'primeng/api';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ViewerComponent,\n    SafePipe\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    NgxJsonViewerModule,\n    NgxFileDropModule,\n    CardModule,\n    TabViewModule,\n    AccordionModule,\n    DividerModule,\n    TableModule,\n    FieldsetModule,\n    InputTextModule,\n    MessageModule,\n    MessagesModule,\n    ToastModule\n  ],\n  providers: [MessageService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ViewerComponent } from './viewer/viewer.component';\n\nconst routes: Routes = [\n  { path: '', component: ViewerComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}